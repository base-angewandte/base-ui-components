(window.webpackJsonp=window.webpackJsonp||[]).push([[151],{1457:function(e,t,n){"use strict";n.r(t);var s=n(34),o=Object(s.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"baseentryselector"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#baseentryselector"}},[e._v("#")]),e._v(" BaseEntrySelector")]),e._v(" "),t("blockquote",[t("p",[e._v("Component to select elements from a list, including search, options and pagination elements.")])]),e._v(" "),t("h2",{attrs:{id:"props"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#props"}},[e._v("#")]),e._v(" Props")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Prop name")]),e._v(" "),t("th",[e._v("Description")]),e._v(" "),t("th",[e._v("Type")]),e._v(" "),t("th",[e._v("Values")]),e._v(" "),t("th",[e._v("Default")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("entries")]),e._v(" "),t("td",[e._v("list of entries to display. Unless the slot "),t("code",[e._v("entries")]),e._v(" is used this should be an object with"),t("br"),e._v("properties compatible with "),t("a",{attrs:{href:"BaseMenuList"}},[e._v("BaseMenuList")]),e._v(" "),t("code",[e._v("list")]),e._v(" object array")]),e._v(" "),t("td",[e._v("array")]),e._v(" "),t("td",[e._v("-")]),e._v(" "),t("td",[e._v("[]")])]),e._v(" "),t("tr",[t("td",[e._v("entriesTotal")]),e._v(" "),t("td",[e._v("provide the total number of entries for pagination calculations")]),e._v(" "),t("td",[e._v("number")]),e._v(" "),t("td",[e._v("-")]),e._v(" "),t("td",[e._v("null")])]),e._v(" "),t("tr",[t("td",[e._v("entriesPerPage")]),e._v(" "),t("td",[e._v("number of entries per page (this does not steer the number of entries displayed."),t("br"),e._v("(the correct number needs to be provided by "),t("code",[e._v("entries")]),e._v(") but is solely"),t("br"),e._v("needed for correct pagination calculations)")]),e._v(" "),t("td",[e._v("number")]),e._v(" "),t("td",[e._v("-")]),e._v(" "),t("td",[e._v("10")])]),e._v(" "),t("tr",[t("td",[e._v("entriesSelectable")]),e._v(" "),t("td",[e._v("define if entries are selectable - thus if checkboxes are available")]),e._v(" "),t("td",[e._v("boolean")]),e._v(" "),t("td",[e._v("-")]),e._v(" "),t("td",[e._v("false")])]),e._v(" "),t("tr",[t("td",[e._v("maxSelectedEntries")]),e._v(" "),t("td",[e._v("specify a maximum number of entries that can be selected."),t("br"),e._v("specify "),t("code",[e._v("0")]),e._v(" if there should be no limit")]),e._v(" "),t("td",[e._v("number")]),e._v(" "),t("td",[e._v("-")]),e._v(" "),t("td",[e._v("0")])]),e._v(" "),t("tr",[t("td",[e._v("height")]),e._v(" "),t("td",[e._v("specify a custom height - mainly useful if component is within a pop-up."),t("br"),e._v("Use a valid CSS height property value.")]),e._v(" "),t("td",[e._v("string")]),e._v(" "),t("td",[e._v("-")]),e._v(" "),t("td",[e._v("''")])]),e._v(" "),t("tr",[t("td",[e._v("isLoading")]),e._v(" "),t("td",[e._v("flag to set if loader should be shown (for fetch requests)")]),e._v(" "),t("td",[e._v("boolean")]),e._v(" "),t("td",[e._v("-")]),e._v(" "),t("td",[e._v("false")])]),e._v(" "),t("tr",[t("td",[e._v("activeEntry")]),e._v(" "),t("td",[e._v("specify the index of an entry to be marked active (color border on left side).")]),e._v(" "),t("td",[e._v("number")]),e._v(" "),t("td",[e._v("-")]),e._v(" "),t("td",[e._v("-1")])]),e._v(" "),t("tr",[t("td",[e._v("language")]),e._v(" "),t("td",[e._v("specify a language (ISO 639-1) (used for label if label is language specific object"),t("br"),e._v("e.g. "),t("code",[e._v("{ de: 'xxx', en: 'yyy' }")]),e._v(")")]),e._v(" "),t("td",[e._v("string")]),e._v(" "),t("td",[e._v("-")]),e._v(" "),t("td",[e._v("'en'")])]),e._v(" "),t("tr",[t("td",[e._v("optionsHidden")]),e._v(" "),t("td",[e._v("hide options completely (necessary if only before or after slot elements should remain)"),t("br"),e._v("if the complete options row should be hidden set "),t("code",[e._v("showOptionsRow")]),e._v(" to "),t("code",[e._v("false")]),e._v(" instead!")]),e._v(" "),t("td",[e._v("boolean")]),e._v(" "),t("td",[e._v("-")]),e._v(" "),t("td",[e._v("false")])]),e._v(" "),t("tr",[t("td",[e._v("entryTypes")]),e._v(" "),t("td",[e._v("define options to filter entries"),t("br"),e._v("structure e.g.: "),t("code",[e._v('[{ label: { de: "Alle Typen", en: "All Types" }, source: "" }]')])]),e._v(" "),t("td",[e._v("array")]),e._v(" "),t("td",[e._v("-")]),e._v(" "),t("td",[e._v("[]")])]),e._v(" "),t("tr",[t("td",[e._v("entryTypesConfig")]),e._v(" "),t("td",[e._v("specify config options for your sorting drop down element (if "),t("code",[e._v("sortOptions")]),e._v(" are"),t("br"),e._v("provided)."),t("br"),e._v("Needs to be an object with the following properties:"),t("br"),e._v(" "),t("strong",[e._v("label")]),e._v(" "),t("code",[e._v("string")]),e._v(" - specify a label for the sort options drop down (purely for accessibility purposes)"),t("br"),e._v(" "),t("strong",[e._v("default")]),e._v(" "),t("code",[e._v("?Object")]),e._v(" - specify a default option that the dropdown is initialized with."),t("br"),e._v(" this needs to have the same object structure as the objects in "),t("code",[e._v("entryTypes")]),e._v("."),t("br"),e._v(" if no default is provided the first option in the list will be selected."),t("br"),e._v(" "),t("strong",[e._v("valuePropertyName")]),e._v(" "),t("code",[e._v("string")]),e._v(" - specify the name of the property that contains a unique value")]),e._v(" "),t("td",[e._v("object")]),e._v(" "),t("td",[e._v("-")]),e._v(" "),t("td",[e._v("{"),t("br"),e._v(" label: 'filter by type',"),t("br"),e._v(" default: null,"),t("br"),e._v(" valuePropertyName: 'value'"),t("br"),e._v("}")])]),e._v(" "),t("tr",[t("td",[e._v("sortOptions")]),e._v(" "),t("td",[e._v("define options for sorting entries."),t("br"),e._v("structure e.g: "),t("code",[e._v("[{ label: 'By Type', value: 'type_en' }]")])]),e._v(" "),t("td",[e._v("array")]),e._v(" "),t("td",[e._v("-")]),e._v(" "),t("td",[e._v("[]")])]),e._v(" "),t("tr",[t("td",[e._v("sortConfig")]),e._v(" "),t("td",[e._v("specify config options for your sorting drop down element (if "),t("code",[e._v("sortOptions")]),e._v(" are"),t("br"),e._v("provided)."),t("br"),e._v("Needs to be an object with the following properties:"),t("br"),e._v(" "),t("strong",[e._v("label")]),e._v(" "),t("code",[e._v("string")]),e._v(" - specify a label for the sort options drop down (purely for accessibility purposes)"),t("br"),e._v(" "),t("strong",[e._v("default")]),e._v(" "),t("code",[e._v("?Object")]),e._v(" - specify a default option that the dropdown is initialized with."),t("br"),e._v(" this needs to have the same object structure as the objects in "),t("code",[e._v("entryTypes")]),e._v("."),t("br"),e._v(" if no default is provided the first option in the list will be selected."),t("br"),e._v(" "),t("strong",[e._v("valuePropertyName")]),e._v(" "),t("code",[e._v("string")]),e._v(" - specify the name of the property that contains a unique value")]),e._v(" "),t("td",[e._v("object")]),e._v(" "),t("td",[e._v("-")]),e._v(" "),t("td",[e._v("{"),t("br"),e._v(" label: 'sort entries',"),t("br"),e._v(" default: null,"),t("br"),e._v(" valuePropertyName: 'value'"),t("br"),e._v("}")])]),e._v(" "),t("tr",[t("td",[e._v("entrySelectorText")]),e._v(" "),t("td",[e._v("specify informational texts for the component (especially helpful to provide language"),t("br"),e._v("specific text) - this needs to be an object with the following"),t("br"),e._v("properties (if you don't want to display any text leave an empty string):"),t("br"),t("br"),e._v(" "),t("strong",[e._v("noEntriesTitle")]),e._v(": Header text shown if search for string returned no results."),t("br"),e._v(" "),t("strong",[e._v("noEntriesSubtext")]),e._v(": subtext shown if search for string returned no result."),t("br"),e._v(" "),t("strong",[e._v("options")]),e._v(": Text for title button."),t("br"),e._v(" This needs to be an object containing a "),t("code",[e._v("show")]),e._v(" and "),t("code",[e._v("hide")]),e._v(" property that are shown when"),t("br"),e._v(" "),t("code",[e._v("entriesSelectable")]),e._v(" is "),t("code",[e._v("true")]),e._v(" or "),t("code",[e._v("false")]),e._v(" respectively."),t("br"),e._v(" "),t("strong",[e._v("search")]),e._v(": placeholder in search input field."),t("br"),e._v(" "),t("strong",[e._v("selectAll")]),e._v(": Text for 'Select All' button."),t("br"),e._v(" "),t("strong",[e._v("selectNone")]),e._v(": Text for 'Select None' button."),t("br"),e._v(" "),t("strong",[e._v("entriesSelected")]),e._v(": Text for number of entries (x) selected. information displayed as"),t("br"),e._v(" "),t("code",[e._v("x {provided text}")]),e._v("."),t("br"),t("br"),e._v(" The values of this object might be plain string or a key for an i18n file (in case it is not"),t("br"),e._v(" an object that is required! - in that case the above applies to the values within that"),t("br"),e._v(" object)")]),e._v(" "),t("td",[e._v("object")]),e._v(" "),t("td",[e._v("-")]),e._v(" "),t("td",[e._v("{"),t("br"),e._v(" noEntriesTitle: 'No matching entries found',"),t("br"),e._v(" noEntriesSubtext: 'Please adjust your search criteria.',"),t("br"),t("br"),e._v(" options: {"),t("br"),e._v(" show: 'options',"),t("br"),e._v(" hide: 'options',"),t("br"),e._v(" },"),t("br"),t("br"),e._v(" search: 'Search',"),t("br"),e._v(" selectAll: 'Select All',"),t("br"),e._v(" selectNone: 'Select None',"),t("br"),e._v(" entriesSelected: 'entries selected',"),t("br"),e._v(" maxEntriesReached: 'Maximum Number Exceeded!'"),t("br"),e._v("}")])]),e._v(" "),t("tr",[t("td",[e._v("useSearch")]),e._v(" "),t("td",[e._v("define if search field should be shown."),t("br"),e._v("this will have no effect if "),t("code",[e._v("head")]),e._v(" slot is used.")]),e._v(" "),t("td",[e._v("boolean")]),e._v(" "),t("td",[e._v("-")]),e._v(" "),t("td",[e._v("true")])]),e._v(" "),t("tr",[t("td",[e._v("showOptionsRow")]),e._v(" "),t("td",[e._v("this will remove the complete row between search and entries list."),t("br"),e._v("This means also the slots "),t("code",[e._v("options")]),e._v(" and "),t("code",[e._v("afterOptions")]),e._v(" are not available anymore!"),t("br"),e._v("(if only the options menu should be hidden use "),t("code",[e._v("optionsHidden")]),e._v(" instead)")]),e._v(" "),t("td",[e._v("boolean")]),e._v(" "),t("td",[e._v("-")]),e._v(" "),t("td",[e._v("true")])]),e._v(" "),t("tr",[t("td",[e._v("assistiveText")]),e._v(" "),t("td",[e._v("this prop gives the option to add assistive text for screen readers."),t("br"),e._v("properties:"),t("br"),t("strong",[e._v("loaderActive")]),e._v(": text that is announced when results are being fetched (prop"),t("br"),e._v(" "),t("code",[e._v("isLoading")]),e._v(" is set "),t("code",[e._v("true")]),e._v(")"),t("br"),t("strong",[e._v("resultsFound")]),e._v(": provide text that should be announced when the search has"),t("br"),e._v(" yielded results. Adding the string '{number}' will announce the total number"),t("br"),e._v(" of results found"),t("br"),t("strong",[e._v("noResultsFound")]),e._v(": provide text that should be announced when no search results"),t("br"),e._v(" were round")]),e._v(" "),t("td",[e._v("object")]),e._v(" "),t("td",[e._v("-")]),e._v(" "),t("td",[e._v("{"),t("br"),e._v(" resultsFound: '{number} Results found.',"),t("br"),e._v(" noResultsFound: 'No results found.',"),t("br"),e._v(" loaderActive: 'Loading.'"),t("br"),e._v("}")])])])]),e._v(" "),t("h2",{attrs:{id:"methods"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#methods"}},[e._v("#")]),e._v(" Methods")]),e._v(" "),t("h3",{attrs:{id:"selectentry"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#selectentry"}},[e._v("#")]),e._v(" selectEntry")]),e._v(" "),t("blockquote",[t("p",[e._v("function to trigger from slot "),t("code",[e._v("entries")]),e._v(" when an entry was selected")])]),e._v(" "),t("h4",{attrs:{id:"params"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#params"}},[e._v("#")]),e._v(" Params")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Param name")]),e._v(" "),t("th",[e._v("Type")]),e._v(" "),t("th",[e._v("Description")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("obj")]),e._v(" "),t("td",[e._v("Object")]),e._v(" "),t("td",[e._v("selected entry")])])])]),e._v(" "),t("h2",{attrs:{id:"events"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#events"}},[e._v("#")]),e._v(" Events")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Event name")]),e._v(" "),t("th",[e._v("Properties")]),e._v(" "),t("th",[e._v("Description")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("update:entries-selectable")]),e._v(" "),t("td",[t("strong",[e._v("undefined")]),e._v(" "),t("code",[e._v("boolean")]),e._v(" - are entries selectable")]),e._v(" "),t("td",[e._v("emit event to inform parent about toggle triggered and keep prop variable"),t("br"),t("code",[e._v("entriesSelectable")]),e._v(" in sync")])]),e._v(" "),t("tr",[t("td",[e._v("selected-changed")]),e._v(" "),t("td",[t("strong",[e._v("undefined")]),e._v(" "),t("code",[e._v("Object[]")]),e._v(" - array of updated selected entries")]),e._v(" "),t("td",[e._v("event emitted every time the selected entries change")])]),e._v(" "),t("tr",[t("td",[e._v("fetch-entries")]),e._v(" "),t("td",[t("strong",[e._v("page")]),e._v(" "),t("code",[e._v("string")]),e._v(" - current pagination page"),t("br"),t("strong",[e._v("query")]),e._v(" "),t("code",[e._v("string")]),e._v(" - the search string"),t("br"),t("strong",[e._v("sort")]),e._v(" "),t("code",[e._v("object")]),e._v(" - the sort filter"),t("br"),t("strong",[e._v("type")]),e._v(" "),t("code",[e._v("object")]),e._v(" - the type filter")]),e._v(" "),t("td",[e._v("Event emitted to fetch entries")])]),e._v(" "),t("tr",[t("td",[e._v("entry-clicked")]),e._v(" "),t("td",[t("strong",[e._v("undefined")]),e._v(" "),t("code",[e._v("string")]),e._v(" - the id of the clicked entry")]),e._v(" "),t("td",[e._v("Triggered when the entry is clicked")])])])]),e._v(" "),t("h2",{attrs:{id:"slots"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#slots"}},[e._v("#")]),e._v(" Slots")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Name")]),e._v(" "),t("th",[e._v("Description")]),e._v(" "),t("th",[e._v("Bindings")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("head")]),e._v(" "),t("td",[e._v("per default this element contains the search element of the component. Use this slot to replace it with your own elements")]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[e._v("after-options")]),e._v(" "),t("td",[e._v("to add custom elements at the end of the options row, e.g. custom drop downs")]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[e._v("option-actions")]),e._v(" "),t("td",[e._v("add custom action (buttons)")]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[e._v("entries")]),e._v(" "),t("td",[e._v("the component "),t("a",{attrs:{href:"BaseMenuList"}},[e._v("BaseMenuList")]),e._v(" is used per default to display the list of entries - if something different is required use this slot.")]),e._v(" "),t("td",[t("strong",[e._v("entries")]),e._v(" "),t("code",[e._v("Object[]")]),e._v(" - list of entries to display"),t("br"),t("strong",[e._v("select-entry")]),e._v(" "),t("code",[e._v("Function")]),e._v(" - function to trigger when entry was selected - takes two arguments: @property "),t("strong",[e._v("index")]),e._v(" "),t("code",[e._v("number")]),e._v(": the index of the element in the entries list. "),t("strong",[e._v("selected")]),e._v(" "),t("code",[e._v("boolean")]),e._v(": if element was selected or deselected")])]),e._v(" "),t("tr",[t("td",[e._v("text-content")]),e._v(" "),t("td",[e._v("use this slot to individualize the displayed text per selector entry.")]),e._v(" "),t("td",[t("strong",[e._v("item")]),e._v(" "),t("code",[e._v("Object")]),e._v(" - the data of one single selector entry provided with "),t("code",[e._v("entries")])])]),e._v(" "),t("tr",[t("td",[e._v("entry-right-side-elements")]),e._v(" "),t("td",[e._v("use this slot to add elements to the right side of an entry. This slot content will be rendered in place of thumbnails and select checkbox so it will effectively disable the display of selection elements and if select mode is desired, custom elements should be provided")]),e._v(" "),t("td",[t("strong",[e._v("is-selected")]),e._v(" "),t("code",[e._v("boolean")]),e._v(" - was item selected"),t("br"),t("strong",[e._v("select-active")]),e._v(" "),t("code",[e._v("boolean")]),e._v(" - is select mode of entry selector active"),t("br"),t("strong",[e._v("item")]),e._v(" "),t("code",[e._v("Object")]),e._v(" - the complete entry provided by list")])]),e._v(" "),t("tr",[t("td",[e._v("thumbnails")]),e._v(" "),t("td",[e._v("add custom elements at the end of the item row (see also "),t("a",{attrs:{href:"BaseMenuList"}},[e._v("BaseMenuList")]),e._v("). this slot can only be be used if the "),t("code",[e._v("entries")]),e._v(" slot is not used")]),e._v(" "),t("td",[t("strong",[e._v("item")]),e._v(" "),t("code",[e._v("Object")]),e._v(" - the data of one entry provided by "),t("code",[e._v("entries")]),e._v(" prop")])])])]),e._v(" "),t("hr"),e._v(" "),t("h2",{attrs:{id:"demo"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#demo"}},[e._v("#")]),e._v(" Demo")]),e._v(" "),t("no-ssr",[t("vue-live",{attrs:{layoutProps:{lang:"vue"},code:'<template>\n  <div class="body">\n    <div class="controls">\n      <BaseToggle v-model="selectMode" label="Select Mode" class="control" />\n      <BaseToggle v-model="showOptions" label="Show Options" class="control" />\n      <BaseToggle\n        v-model="showSort"\n        label="Show Sorting Drop Down"\n        class="control"\n      />\n      <BaseToggle\n        v-model="showTypesFilter"\n        label="Show Types Filter"\n        class="control"\n      />\n      <BaseToggle v-model="isLoading" label="Is Loading" class="control" />\n      <BaseToggle\n        v-model="useCustomText"\n        label="Use Custom Texts"\n        class="control"\n        @clicked="\n          selectMode = true;\n          noResults = true;\n        "\n      />\n      <BaseToggle\n        v-model="noResults"\n        label="No search Results"\n        class="control"\n      />\n      <BaseToggle\n        v-model="showPagination"\n        label="Show Pagination"\n        class="control"\n      />\n      <BaseToggle\n        v-model="useSearch"\n        :disabled="useHeadSlot"\n        label="Use Search"\n        class="control"\n      />\n      <BaseToggle\n        v-model="showOptionsRow"\n        :disabled="useHeadSlot"\n        label="Show Options Row"\n        class="control"\n      />\n    </div>\n    <div class="controls">\n      <BaseToggle\n        v-model="useHeadSlot"\n        label="Use \'head\' Slot"\n        class="control"\n      />\n      <BaseToggle\n        v-model="useActionsSlot"\n        :disabled="!showOptionsRow"\n        label="Use \'option-actions\' Slot"\n        class="control"\n        @clicked="selectMode = true"\n      />\n      <BaseToggle\n        v-model="useAfterOptionsSlot"\n        :disabled="!showOptionsRow"\n        label="Use \'after-options\' Slot"\n        class="control"\n      />\n      <BaseToggle\n        v-model="useEntriesSlot"\n        label="Use \'entries\' Slot"\n        class="control"\n        @clicked="\n          useThumbnailsSlot = false;\n          useEntryTextContentSlot = false;\n          useEntryRightSideSlot = false;\n        "\n      />\n      <BaseToggle\n        v-model="useEntryTextContentSlot"\n        :disabled="useEntriesSlot"\n        label="Use \'entry-text-content\' Slot"\n        class="control"\n      />\n      <BaseToggle\n        v-model="useEntryRightSideSlot"\n        :disabled="useEntriesSlot"\n        label="Use \'entry-right-side-elements\' Slot"\n        class="control"\n        @clicked="useThumbnailsSlot = false"\n      />\n      <BaseToggle\n        v-model="useThumbnailsSlot"\n        :disabled="useEntriesSlot || useEntryRightSideSlot"\n        label="Use \'thumbnails\' Slot"\n        class="control"\n      />\n    </div>\n    <BaseEntrySelector\n      :entries="baseEntrySelectorEntries"\n      :entries-total="entries.length"\n      :entries-per-page="entriesPerPage"\n      :active-entry="\n        baseEntrySelectorEntries.map((entry) => entry.id).indexOf(activeEntry)\n      "\n      :entries-selectable.sync="selectMode"\n      :options-hidden="!showOptions"\n      :sort-options="showSort ? sortOptions : []"\n      :use-search="useSearch"\n      :show-options-row="showOptionsRow"\n      :sort-config="{\n        label: \'Sort Entries\',\n        default: {\n          label: \'A - Z\',\n          value: \'title\',\n        },\n        valuePropertyName: \'value\',\n      }"\n      :entry-types="showTypesFilter ? entryTypes : []"\n      :entry-types-config="{\n        label: \'Filter By Type\',\n        default: {\n          label: {\n            de: \'Alle Typen\',\n            en: \'All Types\',\n          },\n          source: \'\',\n        },\n        valuePropertyName: \'source\',\n      }"\n      :is-loading="isLoading"\n      language="de"\n      v-bind="entrySelectorText"\n      class="entrySelector"\n      @selected-changed="selectedEntries = $event"\n      @fetch-entries="getNewEntries"\n      @entry-clicked="activeEntry = $event"\n    >\n      <template #head>\n        <template v-if="useHeadSlot">\n          <div class="custom-slot">Put your custom head slot elements here</div>\n        </template>\n      </template>\n      <template #option-actions>\n        <template v-if="useActionsSlot">\n          <div class="custom-slot">\n            <BaseButton text="Publish" icon="eye" />\n          </div>\n        </template>\n      </template>\n      <template #after-options>\n        <template v-if="useAfterOptionsSlot">\n          <div class="custom-slot">Custom after-options element</div>\n        </template>\n      </template>\n      <template #entry-text-content="{ item }" v-if="useEntryTextContentSlot">\n        {{ "create your custom content here" + item.title }}\n      </template>\n      <template #entry-right-side-elements v-if="useEntryRightSideSlot">\n        <div class="custom-right-side">\n          <BaseButton\n            button-style="row"\n            icon="edit"\n            text="Edit"\n            class="custom-buttons"\n          />\n          <BaseButton\n            button-style="row"\n            icon="remove"\n            text="Remove"\n            class="custom-buttons"\n          />\n        </div>\n      </template>\n      <template #thumbnails="{ item }">\n        <template v-if="useThumbnailsSlot">\n          <BaseIcon\n            v-if="item.has_media"\n            :style="{ width: \'14px\' }"\n            name="eye"\n          />\n        </template>\n      </template>\n      <template #entries="{ entries, selectEntry }">\n        <template v-if="useEntriesSlot">\n          <div class="custom-slot">\n            This could be your custom entries display\n            <BaseButton\n              v-if="selectMode"\n              text="Select Entry"\n              icon="plus"\n              @clicked="\n                selectEntry({\n                  index: 0,\n                  selected: true,\n                })\n              "\n            />\n            <div>\n              <b>Selected Entries:</b>\n              {{ selectedEntries.map((entry) => entry.id) }}\n            </div>\n          </div>\n        </template>\n      </template>\n    </BaseEntrySelector>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      entries: [\n        {\n          id: "9WMh6vEFRZv83g5CSNxWX",\n          icon: "file-object",\n          has_media: true,\n          description: "An advanced project",\n          title: "Portfolio & Showroom",\n        },\n        {\n          id: "b9TWZjUg268vrFAKwD3c3X",\n          icon: "file-object",\n          has_media: true,\n          title: "Album of Airbrushes",\n          description: "More to come",\n        },\n        {\n          id: "9WMh6vEFRZ5e83g5CSNxWX",\n          icon: "file-object",\n          has_media: true,\n          title: "More Entries",\n          description: "And it continues",\n        },\n        {\n          id: "9WMh6vEFRZ5e83g5CSNxWg",\n          icon: "file-object",\n          has_media: true,\n          title: "My List",\n          description: "Nowhere",\n        },\n        {\n          id: "9WMh6sfgsr465e83g5CSNxWX",\n          icon: "calendar-many",\n          has_media: true,\n          title: "The Road",\n          description: "Oh so long",\n        },\n      ],\n      page: 1,\n      activeEntry: -1,\n      selectedEntries: [],\n      showSort: true,\n      showTypesFilter: true,\n      selectMode: false,\n      showOptions: true,\n      isLoading: false,\n      useCustomText: false,\n      noResults: false,\n      showPagination: true,\n      useSearch: true,\n      showOptionsRow: true,\n      sortOptions: [\n        {\n          label: "By Type",\n          value: "type_en",\n        },\n        {\n          label: "A - Z",\n          value: "title",\n        },\n      ],\n      entryTypes: [\n        {\n          label: {\n            de: "Alle Typen",\n            en: "All Types",\n          },\n          source: "",\n        },\n        {\n          label: {\n            de: "Album",\n            en: "Album",\n          },\n          source: "http://base.uni-ak.ac.at/portfolio/taxonomy/album",\n        },\n      ],\n      useHeadSlot: false,\n      useEntriesSlot: false,\n      useThumbnailsSlot: true,\n      useActionsSlot: false,\n      useAfterOptionsSlot: false,\n      useEntryTextContentSlot: false,\n      useEntryRightSideSlot: false,\n    };\n  },\n  computed: {\n    baseEntrySelectorEntries() {\n      if (!this.noResults) {\n        const start = (this.page - 1) * this.entriesPerPage;\n        return this.entries.slice(start, start + this.entriesPerPage);\n      }\n      return [];\n    },\n    entrySelectorText() {\n      if (this.useCustomText) {\n        return {\n          entrySelectorText: {\n            noEntriesTitle: "Custom No Match Title",\n            noEntriesSubtext: "Custom No Match Subtext.",\n            options: {\n              show: "Custom Options",\n              hide: "Custom Exit",\n            },\n            search: "Custom Search Text",\n            selectAll: "Custom Select All",\n            selectNone: "Custom Select None",\n            entriesSelected: "Custom Items Selected",\n          },\n        };\n      }\n      return {};\n    },\n    entriesPerPage() {\n      return this.showPagination ? 2 : 5;\n    },\n  },\n  methods: {\n    getNewEntries({ page }) {\n      this.page = Number(page);\n    },\n  },\n};\n<\/script>\n\n<style scoped>\n.body {\n  padding: 16px;\n  background: rgb(240, 240, 240);\n}\n\n.controls {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  margin-bottom: 16px;\n}\n\n.control {\n  margin: 8px;\n}\n\n.custom-slot {\n  border: 1px solid red;\n  padding: 16px;\n  text-align: center;\n}\n\n.custom-buttons {\n  border-left: 2px solid rgb(240, 240, 240);\n}\n\n.entrySelector >>> .custom-right-side {\n  display: flex;\n  flex-direction: row;\n}\n</style>\n',requires:{}}})],1)],1)}),[],!1,null,null,null);t.default=o.exports}}]);