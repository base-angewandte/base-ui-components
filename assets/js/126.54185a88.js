(window.webpackJsonp=window.webpackJsonp||[]).push([[126],{1357:function(t,e,v){"use strict";v.r(e);var n=v(35),_=Object(n.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"basedropbox"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#basedropbox"}},[t._v("#")]),t._v(" BaseDropBox")]),t._v(" "),e("blockquote",[e("p",[t._v("An Element to drop files or other UI Elements into")])]),t._v(" "),e("h2",{attrs:{id:"props"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#props"}},[t._v("#")]),t._v(" Props")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Prop name")]),t._v(" "),e("th",[t._v("Description")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Values")]),t._v(" "),e("th",[t._v("Default")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("icon")]),t._v(" "),e("td",[t._v("specify an icon to be displayed centered in the box")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("null")])]),t._v(" "),e("tr",[e("td",[t._v("showPlus")]),t._v(" "),e("td",[t._v("if "),e("code",[t._v("true")]),t._v(" a plus sign is displayed in front of the icon")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("false")])]),t._v(" "),e("tr",[e("td",[t._v("text")]),t._v(" "),e("td",[t._v("the text displayed below the icon")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("''")])]),t._v(" "),e("tr",[e("td",[t._v("subtext")]),t._v(" "),e("td",[t._v("specify a potential subtext")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("''")])]),t._v(" "),e("tr",[e("td",[t._v("boxSize")]),t._v(" "),e("td",[t._v("define the box size")]),t._v(" "),e("td",[t._v("object")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("{"),e("br"),t._v(" width: '250px'"),e("br"),t._v("}")])]),t._v(" "),e("tr",[e("td",[t._v("boxRatio")]),t._v(" "),e("td",[t._v("define the ratio of width and height of the box"),e("br"),t._v("(in percent string, e.g. 1:1 --\x3e "),e("code",[t._v("'100'")]),t._v(", 1:2 --\x3e "),e("code",[t._v("'50'")]),t._v(")")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("'100'")])]),t._v(" "),e("tr",[e("td",[t._v("renderElementAs")]),t._v(" "),e("td",[t._v("specify the tag of the button")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("'div'")])]),t._v(" "),e("tr",[e("td",[t._v("dropType")]),t._v(" "),e("td",[t._v("specify the type of drops")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[e("code",[t._v("files")]),t._v(", "),e("code",[t._v("elements")])]),t._v(" "),e("td",[t._v("'files'")])]),t._v(" "),e("tr",[e("td",[t._v("dropElementName")]),t._v(" "),e("td",[t._v("if the "),e("code",[t._v("dropType")]),t._v(" is "),e("code",[t._v("elements")]),t._v(", specify the element group name"),e("br"),t._v("this needs to match the group name of the draggable element that should"),e("br"),t._v("be dragged into this element")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("''")])]),t._v(" "),e("tr",[e("td",[t._v("dragItemClass")]),t._v(" "),e("td",[t._v("if the "),e("code",[t._v("dropType")]),t._v(" is "),e("code",[t._v("elements")]),t._v(" specify a class name to limit interactions to a certain element")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("''")])]),t._v(" "),e("tr",[e("td",[t._v("disabled")]),t._v(" "),e("td",[t._v("set button inactive")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("false")])]),t._v(" "),e("tr",[e("td",[t._v("showTooltip")]),t._v(" "),e("td",[t._v("show tooltip")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("false")])])])]),t._v(" "),e("h2",{attrs:{id:"events"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#events"}},[t._v("#")]),t._v(" Events")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Event name")]),t._v(" "),e("th",[t._v("Properties")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("dropped-file")]),t._v(" "),e("td",[e("strong",[t._v("undefined")]),t._v(" "),e("code",[t._v("DragEvent")]),t._v(" - propagating the triggered event")]),t._v(" "),e("td",[t._v("event emitted when a file or an element is dropped on the box, emitting the type of event")])]),t._v(" "),e("tr",[e("td",[t._v("dropped-element")]),t._v(" "),e("td",[e("strong",[t._v("undefined")]),t._v(" "),e("code",[t._v("string")]),t._v(" - the id of the dropped element")]),t._v(" "),e("td",[t._v("event emitted when an element is dropped on the box, emitting the element data id")])]),t._v(" "),e("tr",[e("td",[t._v("clicked")]),t._v(" "),e("td",[e("strong",[t._v("undefined")]),t._v(" "),e("code",[t._v("Event")]),t._v(" - propagating the triggered click event")]),t._v(" "),e("td",[t._v("Triggered when the box or tooltip is clicked")])])])]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"demo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#demo"}},[t._v("#")]),t._v(" Demo")]),t._v(" "),e("p",[t._v("A box with event firing on drop")]),t._v(" "),e("no-ssr",[e("vue-live",{attrs:{layoutProps:{lang:"vue"},code:'<template>\n  <div>\n    <div class="box-container">\n      <BaseDropBox\n        :icon="\'calendar-many\'"\n        text="Drop a file here"\n        subtext="Add more info"\n        class="drop-box"\n        @dropped-file="handleFileSelect($event)"\n      />\n\n      <BaseDropBox\n        :icon="\'file-object\'"\n        :show-plus="true"\n        text="Box with Plus"\n        subtext="Add more info"\n        class="drop-box"\n      />\n      <BaseDropBox\n        :icon="\'file-object\'"\n        :box-size="{ width: \'calc(50%)\' }"\n        box-ratio="50"\n        text="Ratio 50"\n        subtext="Add more info"\n        class="drop-box"\n      />\n    </div>\n    <div>\n      <p v-for="(file, index) in filesToUpload" :key="index">\n        {{ file.name }}\n      </p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      filesToUpload: []\n    };\n  },\n  methods: {\n    handleFileSelect(e) {\n      const files = e.dataTransfer.files;\n      // check if it was actual files that were dragged in\n      if (files && files.length) {\n        for (let i = 0; i < files.length; i += 1) {\n          this.filesToUpload.push(files[i]);\n        }\n      }\n    }\n  }\n};\n<\/script>\n\n<style>\n.box-container {\n  display: flex;\n}\n\n.drop-box {\n  margin: 8px;\n}\n</style>\n',requires:{}}})],1)],1)}),[],!1,null,null,null);e.default=_.exports}}]);