(window.webpackJsonp=window.webpackJsonp||[]).push([[140],{1445:function(t,e,v){"use strict";v.r(e);var _=v(34),n=Object(_.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"basechip"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#basechip"}},[t._v("#")]),t._v(" BaseChip")]),t._v(" "),e("blockquote",[e("p",[t._v("Basic Chip component")])]),t._v(" "),e("h2",{attrs:{id:"props"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#props"}},[t._v("#")]),t._v(" Props")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Prop name")]),t._v(" "),e("th",[t._v("Description")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Values")]),t._v(" "),e("th",[t._v("Default")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("v-model")]),t._v(" "),e("td",[t._v("pass the text for the chip")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("isLinked")]),t._v(" "),e("td",[t._v("set if entry is a linked data entry and displayed with grey background")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("true")])]),t._v(" "),e("tr",[e("td",[t._v("hoverBoxContent")]),t._v(" "),e("td",[t._v("if a hover box is associated with the chip add all relevant properties here"),e("br"),t._v("(see "),e("a",{attrs:{href:"BaseHoverBox"}},[t._v("BaseHoverBox")]),t._v(" for details)"),e("br"),e("br"),e("strong",[t._v("CAVEAT")]),t._v(": this prop is deprecated and will be removed in the next major version!"),e("br"),t._v("Usage not recommended!"),e("br"),t._v("Have a look into "),e("a",{attrs:{href:"BaseTooltipBox"}},[t._v("BaseTooltipBox")]),t._v(" for implementing a similar functionality")]),t._v(" "),e("td",[t._v("object")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("{}")])]),t._v(" "),e("tr",[e("td",[t._v("chipActive")]),t._v(" "),e("td",[t._v("set chip active (set color)")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("false")])]),t._v(" "),e("tr",[e("td",[t._v("isRemovable")]),t._v(" "),e("td",[t._v("flag to specify if chip can be removed")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("true")])]),t._v(" "),e("tr",[e("td",[t._v("textStyling")]),t._v(" "),e("td",[t._v("add some custom text styling")]),t._v(" "),e("td",[t._v("object")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("{}")])]),t._v(" "),e("tr",[e("td",[t._v("editable")]),t._v(" "),e("td",[t._v("define true if chip should be editable on click"),e("br"),e("br"),e("strong",[t._v("Caveat")]),t._v(": chips can not show "),e("code",[t._v("hoverBoxContent")]),t._v(" as soon as it is editable"),e("br"),t._v("respectively - if both are set "),e("code",[t._v("true")]),t._v(" edit functionality takes precedent - chip will"),e("br"),t._v(" not be draggable, "),e("code",[t._v("hoverBoxContent")]),t._v(" will not be shown!")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("false")])]),t._v(" "),e("tr",[e("td",[t._v("assistiveText")]),t._v(" "),e("td",[t._v("text read when a chip is focused - currently only available with prop"),e("br"),t._v(" "),e("code",[t._v("editable")]),t._v(" true")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("''")])]),t._v(" "),e("tr",[e("td",[t._v("interpretTextAsHtml")]),t._v(" "),e("td",[t._v("if necessary chip text can be rendered as html"),e("br"),t._v(" this feature is currently only available if the chip is not editable"),e("br"),e("br"),t._v(" "),e("strong",[t._v("caveat")]),t._v(": setting this variable "),e("code",[t._v("true")]),t._v(" can lead to XSS attacks. Only use"),e("br"),t._v(" this prop on trusted content and never on user-provided content.")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("false")])])])]),t._v(" "),e("h2",{attrs:{id:"events"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#events"}},[t._v("#")]),t._v(" Events")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Event name")]),t._v(" "),e("th",[t._v("Properties")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("value-changed")]),t._v(" "),e("td",[e("strong",[t._v("undefined")]),t._v(" "),e("code",[t._v("string")]),t._v(" - the displayed text string after edit")]),t._v(" "),e("td",[t._v("if chip is editable value is updated with this event")])]),t._v(" "),e("tr",[e("td",[t._v("clicked")]),t._v(" "),e("td"),t._v(" "),e("td",[t._v("event emitted when chip is clicked")])]),t._v(" "),e("tr",[e("td",[t._v("hoverbox-active")]),t._v(" "),e("td",[e("strong",[t._v("undefined")]),t._v(" "),e("code",[t._v("boolean")]),t._v(" - is hoverbox active")]),t._v(" "),e("td",[t._v("event indicating if hover box was set to show / hide")])]),t._v(" "),e("tr",[e("td",[t._v("mouse-down")]),t._v(" "),e("td",[e("strong",[t._v("undefined")]),t._v(" "),e("code",[t._v("Event")]),t._v(" - the native MouseEvent")]),t._v(" "),e("td",[t._v("event on mouse down, needed by base chips input to determine active chip")])]),t._v(" "),e("tr",[e("td",[t._v("remove-entry")]),t._v(" "),e("td",[e("strong",[t._v("undefined")]),t._v(" "),e("code",[t._v("string")]),t._v(" - the displayed chip string")]),t._v(" "),e("td",[t._v("triggered when the remove icon is clicked and returns the data behind the chip")])])])]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"demo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#demo"}},[t._v("#")]),t._v(" Demo")]),t._v(" "),e("p",[t._v("A chip that can be edited")]),t._v(" "),e("no-ssr",[e("vue-live",{attrs:{layoutProps:{lang:"vue"},code:'<template>\n  <div>\n    <BaseChip :entry="entry" :is-linked="false" @remove-entry="remove" />\n    <BaseChip\n      :entry="\'i am linked and editable!\'"\n      :is-linked="true"\n      :editable="true"\n      assistive-text="testing this now???"\n      @remove-entry="remove"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      entry: "A chip not Linked",\n    };\n  },\n  methods: {\n    remove(evt) {\n      alert("Event " + evt + " emitted");\n    },\n  },\n};\n<\/script>\n',requires:{}}})],1)],1)}),[],!1,null,null,null);e.default=n.exports}}]);