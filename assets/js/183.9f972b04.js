(window.webpackJsonp=window.webpackJsonp||[]).push([[183],{1479:function(t,e,v){"use strict";v.r(e);var o=v(34),n=Object(o.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"baseswitchbutton"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#baseswitchbutton"}},[t._v("#")]),t._v(" BaseSwitchButton")]),t._v(" "),e("blockquote",[e("p",[t._v("accessible tab switch buttons")])]),t._v(" "),e("h2",{attrs:{id:"props"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#props"}},[t._v("#")]),t._v(" Props")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Prop name")]),t._v(" "),e("th",[t._v("Description")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Values")]),t._v(" "),e("th",[t._v("Default")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("options")]),t._v(" "),e("td",[t._v("specify the tabs as array of object with "),e("code",[t._v("value")]),t._v(", "),e("code",[t._v("label")]),t._v(" and (optional) "),e("code",[t._v("icon")]),t._v(" properties")]),t._v(" "),e("td",[t._v("array")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("[{ label: 'tab', value: 'tab', icon: '' }]")])]),t._v(" "),e("tr",[e("td",[t._v("v-model")]),t._v(" "),e("td",[t._v("set the currently active tab (specify the value of the object not the label)")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("() => (this.options[0] ? this.options[0].value : 'tab')")])]),t._v(" "),e("tr",[e("td",[t._v("label")]),t._v(" "),e("td",[t._v("set a label for the switches, not visible per default (set "),e("code",[t._v("showLabel")]),t._v(" to "),e("code",[t._v("true")]),t._v(" if label should be shown) but required for accessibility")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("type")]),t._v(" "),e("td",[t._v("set a type for the button's active state rendering style"),e("br"),t._v(" "),e("strong",[t._v("normal")]),t._v(": gives the switch a more subtle, more condensed look with active item only indicated by grey border,"),e("br"),t._v(" buttons have a label per default ("),e("code",[t._v("showButtonsLabel")]),t._v(" is "),e("code",[t._v("true")]),t._v(")."),e("br"),t._v(" "),e("strong",[t._v("prominent")]),t._v(": larger buttons with more spacing and permanent border around each item, active item is"),e("br"),t._v(" indicated by a 2px (app-)colored bottom border, button labels are not shown per default ("),e("code",[t._v("showButtonsLabel")]),t._v(" is "),e("code",[t._v("false")]),t._v(")"),e("br"),t._v(" so the property "),e("code",[t._v("icon")]),t._v(" should be set for each switch item in "),e("code",[t._v("options")]),t._v(".")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[e("code",[t._v("normal")]),t._v(", "),e("code",[t._v("prominent")])]),t._v(" "),e("td",[t._v("'normal'")])]),t._v(" "),e("tr",[e("td",[t._v("showLabel")]),t._v(" "),e("td",[t._v("set if the switch label is shown")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("false")])]),t._v(" "),e("tr",[e("td",[t._v("showButtonsLabel")]),t._v(" "),e("td",[t._v("define if the label of the single buttons should be shown (or just icons). This"),e("br"),t._v("property is default undefined and is determined internally individually for each type:"),e("br"),t._v(" "),e("strong",[t._v("normal")]),t._v(": default is "),e("code",[t._v("true")]),e("br"),t._v(" "),e("strong",[t._v("prominent")]),t._v(": default is "),e("code",[t._v("false")])]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("undefined")])]),t._v(" "),e("tr",[e("td",[t._v("iconPosition")]),t._v(" "),e("td",[t._v("specify where the icon should be rendered")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[e("code",[t._v("right")]),t._v(", "),e("code",[t._v("left")])]),t._v(" "),e("td",[t._v("'right'")])]),t._v(" "),e("tr",[e("td",[t._v("iconSize")]),t._v(" "),e("td",[t._v("specify icon size"),e("br"),t._v("this prop currently only applies to "),e("code",[t._v("type")]),t._v(" 'prominent'")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[e("code",[t._v("small")]),t._v(", "),e("code",[t._v("medium")]),t._v(", "),e("code",[t._v("large")])]),t._v(" "),e("td",[t._v("'medium'")])]),t._v(" "),e("tr",[e("td",[t._v("disabled")]),t._v(" "),e("td",[t._v("set true if the buttons should be visible but disabled, so they"),e("br"),t._v("will appear greyed out and not be clickable")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("false")])])])]),t._v(" "),e("h2",{attrs:{id:"events"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#events"}},[t._v("#")]),t._v(" Events")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Event name")]),t._v(" "),e("th",[t._v("Properties")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("switch")]),t._v(" "),e("td",[e("strong",[t._v("undefined")]),t._v(" "),e("code",[t._v("string")]),t._v(" - the "),e("code",[t._v("value")]),t._v(" of the selected option object")]),t._v(" "),e("td",[t._v("Event emitted on options switch, value of options object is emitted")])])])]),t._v(" "),e("h2",{attrs:{id:"slots"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#slots"}},[t._v("#")]),t._v(" Slots")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Name")]),t._v(" "),e("th",[t._v("Description")]),t._v(" "),e("th",[t._v("Bindings")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("right-of-content")]),t._v(" "),e("td",[t._v("slot to display something right of text (e.g. icon), or if "),e("code",[t._v("showButtonsLabel")]),t._v(" false - generally right of the button content")]),t._v(" "),e("td",[e("strong",[t._v("value")]),t._v(" "),e("code",[t._v("string")]),t._v(" - the value of the option object")])])])]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"demo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#demo"}},[t._v("#")]),t._v(" Demo")]),t._v(" "),e("h3",{attrs:{id:"type-normal"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#type-normal"}},[t._v("#")]),t._v(" Type: "),e("code",[t._v("normal")])]),t._v(" "),e("br"),t._v("\nType "),e("code",[t._v("normal")]),t._v(" gives the switch a more subtle, more condensed look with active item only indicated by grey border,\nbuttons have a label per default ("),e("code",[t._v("showButtonsLabel")]),t._v(" is "),e("code",[t._v("true")]),t._v(").\n"),e("br"),t._v(" "),e("br"),t._v(" "),e("no-ssr",[e("vue-live",{attrs:{layoutProps:{lang:"vue"},code:'<template>\n  <div>\n    <BaseSwitchButton\n      :options="[\n        { label: \'German\', value: \'de\' },\n        { label: \'English\', value: \'en\' },\n      ]"\n      v-model="activeLang"\n      label="Select Language"\n      type="normal"\n      icon-position="right"\n    >\n      <template #right-of-content="{ value }">\n        <BaseIcon v-if="value === \'en\'" name="text" class="icon" />\n      </template>\n    </BaseSwitchButton>\n    <div>{{ "active lang: " + activeLang }}</div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data: () => ({\n    activeLang: "en",\n  }),\n};\n<\/script>\n\n<style>\n.icon {\n  height: 10px;\n  width: 10px;\n}\n</style>\n',requires:{}}})],1),e("h3",{attrs:{id:"type-prominent"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#type-prominent"}},[t._v("#")]),t._v(" Type: "),e("code",[t._v("prominent")])]),t._v(" "),e("br"),t._v("\nType "),e("code",[t._v("prominent")]),t._v(" has larger buttons with more spacing and permanent border around each item, active item is\nindicated by a 2px (app-)colored bottom border, button labels are not shown per default ("),e("code",[t._v("showButtonsLabel")]),t._v(" is "),e("code",[t._v("false")]),t._v(")\nso the property "),e("code",[t._v("icon")]),t._v(" should be set for each switch item in "),e("code",[t._v("options")]),t._v(".\n"),e("br"),t._v(" "),e("br"),t._v(" "),e("no-ssr",[e("vue-live",{attrs:{layoutProps:{lang:"vue"},code:'<template>\n  <div>\n    <BaseSwitchButton\n      :options="[\n        { label: \'List\', value: \'list\', icon: \'drag-lines\' },\n        { label: \'Stars\', value: \'stars\', icon: \'subscribe\' },\n      ]"\n      v-model="activeMode"\n      label="Select Mode"\n      :show-label="true"\n      type="prominent"\n    />\n    <div>{{ "active mode: " + activeMode }}</div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data: () => ({\n    activeMode: "stars",\n  }),\n};\n<\/script>\n',requires:{}}})],1)],1)}),[],!1,null,null,null);e.default=n.exports}}]);