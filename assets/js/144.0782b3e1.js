(window.webpackJsonp=window.webpackJsonp||[]).push([[144],{1448:function(t,e,v){"use strict";v.r(e);var d=v(34),_=Object(d.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"basedateinput"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#basedateinput"}},[t._v("#")]),t._v(" BaseDateInput")]),t._v(" "),e("blockquote",[e("p",[t._v("Form Input Field Component for Date, Date - Date, Date - Time, or Time - Time")])]),t._v(" "),e("p",[t._v("for date also a format switch between date | year is available")]),t._v(" "),e("h2",{attrs:{id:"props"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#props"}},[t._v("#")]),t._v(" Props")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Prop name")]),t._v(" "),e("th",[t._v("Description")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Values")]),t._v(" "),e("th",[t._v("Default")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("type")]),t._v(" "),e("td",[t._v("select date or datetime or a range")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[e("code",[t._v("daterange")]),t._v(", "),e("code",[t._v("datetime")]),t._v(", "),e("code",[t._v("single")]),t._v(", "),e("code",[t._v("timerange")])]),t._v(" "),e("td",[t._v("'single'")])]),t._v(" "),e("tr",[e("td",[t._v("v-model")]),t._v(" "),e("td",[t._v("input field settable from outside."),e("br"),t._v(" attention: if this is an object it needs to contain all the"),e("br"),t._v(" properties (e.g. date_from, time_to) already otherwise only"),e("br"),t._v(" a string will be returned")]),t._v(" "),e("td",[t._v("object|string|date")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("label")]),t._v(" "),e("td",[t._v("label for input field, required for usability purposes, handle"),e("br"),t._v("showing of label with property showLabel")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("showLabel")]),t._v(" "),e("td",[t._v("defines if input label should be visible")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("true")])]),t._v(" "),e("tr",[e("td",[t._v("placeholder")]),t._v(" "),e("td",[t._v("set a placeholder for the input field (object with date and time attribute respectively)")]),t._v(" "),e("td",[t._v("object|string")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("() => ({ date: 'Select Date', time: 'Select Time' })")])]),t._v(" "),e("tr",[e("td",[t._v("rangeSeparator")]),t._v(" "),e("td",[t._v("define the range separator")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("'â€“'")])]),t._v(" "),e("tr",[e("td",[t._v("format")]),t._v(" "),e("td",[t._v("specify date format."),e("br"),e("br"),t._v(" "),e("strong",[t._v("date_year")]),t._v(": display tabs that allow for toggle between only choosing year"),e("br"),t._v(" or complete date"),e("br"),t._v(" "),e("strong",[t._v("date_month_year")]),t._v(": display tabs that allow for toggle between choosing only year,"),e("br"),t._v(" year and month or complete date")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[e("code",[t._v("day")]),t._v(", "),e("code",[t._v("month")]),t._v(", "),e("code",[t._v("year")]),t._v(", "),e("code",[t._v("date_year")]),t._v(", "),e("code",[t._v("date_month_year")])]),t._v(" "),e("td",[t._v("'day'")])]),t._v(" "),e("tr",[e("td",[t._v("dateFormatLabels")]),t._v(" "),e("td",[t._v("specify labels displayed instead of 'DD.MM.YYYY' and 'YYYY'"),e("br"),t._v(" should have the form "),e("code",[t._v("{ date: 'xxx', month: 'zzz', year: 'yyy' }")])]),t._v(" "),e("td",[t._v("object")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("{"),e("br"),t._v(" date: 'DD.MM.YYYY',"),e("br"),t._v(" month: 'MM.YYYY',"),e("br"),t._v(" year: 'YYYY'"),e("br"),t._v("}")])]),t._v(" "),e("tr",[e("td",[t._v("formatTabsLegend")]),t._v(" "),e("td",[t._v("a legend for the date format switch buttons")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("'Switch between date formats'")])]),t._v(" "),e("tr",[e("td",[t._v("language")]),t._v(" "),e("td",[t._v("set calendar language (ISO 639-1)."),e("br"),e("strong",[t._v("caveat")]),t._v(": currently only "),e("code",[t._v("en")]),t._v(", "),e("code",[t._v("de")]),t._v(" and "),e("code",[t._v("fr")]),t._v(" are supported")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[e("code",[t._v("de")]),t._v(", "),e("code",[t._v("en")]),t._v(", "),e("code",[t._v("fr")])]),t._v(" "),e("td",[t._v("'en'")])]),t._v(" "),e("tr",[e("td",[t._v("id")]),t._v(" "),e("td",[t._v("set id")]),t._v(" "),e("td",[t._v("number|string")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("''")])]),t._v(" "),e("tr",[e("td",[t._v("useFormFieldStyling")]),t._v(" "),e("td",[t._v("define if standard form field styling should be"),e("br"),t._v("used (otherwise no border, no box shadow)")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("true")])]),t._v(" "),e("tr",[e("td",[t._v("showInputBorder")]),t._v(" "),e("td",[t._v("option to have the border of the input field not displayed")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("true")])]),t._v(" "),e("tr",[e("td",[t._v("required")]),t._v(" "),e("td",[t._v("mark as required field (currently only used for aria-required)")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("false")])]),t._v(" "),e("tr",[e("td",[t._v("invalid")]),t._v(" "),e("td",[t._v("mark the form field as invalid and ideally also provide an error message"),e("br"),t._v("to display below the form field"),e("br"),t._v("for an example see "),e("a",{attrs:{href:"BaseInput"}},[t._v("BaseInput")])]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("false")])]),t._v(" "),e("tr",[e("td",[t._v("disabled")]),t._v(" "),e("td",[t._v("set "),e("code",[t._v("true")]),t._v(" if input field should be disabled"),e("br"),t._v("for an example see "),e("a",{attrs:{href:"BaseInput"}},[t._v("BaseInput")])]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("false")])]),t._v(" "),e("tr",[e("td",[t._v("errorMessage")]),t._v(" "),e("td",[t._v("add an error message to be displayed below form field if field is invalid"),e("br"),t._v("for an example see "),e("a",{attrs:{href:"BaseInput"}},[t._v("BaseInput")])]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("''")])]),t._v(" "),e("tr",[e("td",[t._v("showErrorIcon")]),t._v(" "),e("td",[t._v("define if error icon should be shown"),e("br"),t._v("for an example see "),e("a",{attrs:{href:"BaseInput"}},[t._v("BaseInput")])]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("true")])]),t._v(" "),e("tr",[e("td",[t._v("clearable")]),t._v(" "),e("td",[t._v("if "),e("code",[t._v("true")]),t._v(" a remove icon will be shown allowing to remove"),e("br"),t._v("all input at once"),e("br"),t._v("for an example see "),e("a",{attrs:{href:"BaseInput"}},[t._v("BaseInput")])]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("false")])]),t._v(" "),e("tr",[e("td",[t._v("inputClass")]),t._v(" "),e("td",[t._v("specify additional input field styling")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("''")])]),t._v(" "),e("tr",[e("td",[t._v("setFocusOnActive")]),t._v(" "),e("td",[t._v("use this prop to deactivate automatic setting of focus as soon as input element"),e("br"),t._v("becomes active - this might require external handling of focus setting!")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("true")])]),t._v(" "),e("tr",[e("td",[t._v("isActive")]),t._v(" "),e("td",[t._v("in order to be able to set input field active state from outside")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("false")])]),t._v(" "),e("tr",[e("td",[t._v("isActiveDelay")]),t._v(" "),e("td",[t._v("use this prop to set a delay in ms before calender is displayed")]),t._v(" "),e("td",[t._v("number")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("0")])])])]),t._v(" "),e("h2",{attrs:{id:"events"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#events"}},[t._v("#")]),t._v(" Events")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Event name")]),t._v(" "),e("th",[t._v("Properties")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("input")]),t._v(" "),e("td",[e("strong",[t._v("undefined")]),t._v(" "),e("code",[t._v("string")]),t._v(" - the input event value however")]),t._v(" "),e("td",[t._v("Event emitted on input, passing input string")])]),t._v(" "),e("tr",[e("td",[t._v("update:is-active")]),t._v(" "),e("td",[e("strong",[t._v("undefined")]),t._v(" "),e("code",[t._v("boolean")]),t._v(" - is input field active")]),t._v(" "),e("td",[t._v("replace BaseInput state with BaseDateInput field active state and"),e("br"),t._v("propagate this one")])]),t._v(" "),e("tr",[e("td",[t._v("value-validated")]),t._v(" "),e("td",[e("strong",[t._v("undefined")]),t._v(" "),e("code",[t._v("string, Object")]),t._v(" - the validated string or input object")]),t._v(" "),e("td",[t._v("this event is emitted when the value was validated in case input should just be considered"),e("br"),t._v("after date validation")])]),t._v(" "),e("tr",[e("td",[t._v("clicked-outside")]),t._v(" "),e("td",[e("strong",[t._v("undefined")]),t._v(" "),e("code",[t._v("MouseEvent")]),t._v(" - the native Event")]),t._v(" "),e("td",[t._v("emit a custom clicked-outside event instead of BaseInput event (propagation stopped)")])]),t._v(" "),e("tr",[e("td",[t._v("click-input-field")]),t._v(" "),e("td",[e("strong",[t._v("undefined")]),t._v(" "),e("code",[t._v("MouseEvent")]),t._v(" - the native Event")]),t._v(" "),e("td",[t._v("event additionally triggered to BaseInput default click-input-field to also"),e("br"),t._v("set field active if component sourroundings are clicked")])]),t._v(" "),e("tr",[e("td",[t._v("selected")]),t._v(" "),e("td",[e("strong",[t._v("undefined")]),t._v(" "),e("code",[t._v("string, Object")]),t._v(" - the input string or object")]),t._v(" "),e("td",[t._v("emit an event when focus leaves the input")])])])]),t._v(" "),e("h2",{attrs:{id:"slots"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#slots"}},[t._v("#")]),t._v(" Slots")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Name")]),t._v(" "),e("th",[t._v("Description")]),t._v(" "),e("th",[t._v("Bindings")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("label-addition")]),t._v(" "),e("td",[t._v("to add additional elements to the label row")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("pre-input-field")]),t._v(" "),e("td",[t._v("to add elements within form field but before the input element line for an example see "),e("a",{attrs:{href:"BaseInput"}},[t._v("BaseInput")])]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("input-field-addition-before")]),t._v(" "),e("td",[t._v("add elements within input form field but before all other elements - this field wraps if necessary for an example see "),e("a",{attrs:{href:"BaseInput"}},[t._v("BaseInput")])]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("input-field-inline-before")]),t._v(" "),e("td",[t._v("add elements directly in the input line (no wrapping) for an example see "),e("a",{attrs:{href:"BaseInput"}},[t._v("BaseInput")])]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("post-input-field")]),t._v(" "),e("td",[t._v("for adding elements after input")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("below-input")]),t._v(" "),e("td",[t._v("to add elements below input fields e.g. add drop down")]),t._v(" "),e("td")])])]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"demo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#demo"}},[t._v("#")]),t._v(" Demo")]),t._v(" "),e("p",[t._v("Date range input fields")]),t._v(" "),e("no-ssr",[e("vue-live",{attrs:{layoutProps:{lang:"vue"},code:'<template>\n  <div>\n    <base-date-input\n      id="dayformatdemo"\n      :label="\'Enter A Date\'"\n      :format="\'day\'"\n      :show-label="true"\n      v-model="datepicked"\n      type="daterange"\n      placeholder="enter a date"\n    />\n    <div>{{ datepicked }}</div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      datepicked: {\n        date_from: "",\n        date_to: "",\n      },\n    };\n  },\n};\n<\/script>\n',requires:{}}})],1),e("br"),t._v("\nSingle date input with format 'date_month_year', enabling switching the format\n"),e("no-ssr",[e("vue-live",{attrs:{layoutProps:{lang:"vue"},code:'<template>\n  <base-date-input\n    id="yearformatdemo"\n    :label="\'Enter A Year\'"\n    :format="\'date_month_year\'"\n    :show-label="true"\n    v-model="datepicked"\n    type="single"\n    placeholder="enter a year"\n  />\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      datepicked: {\n        date: "2017",\n      },\n    };\n  },\n};\n<\/script>\n',requires:{}}})],1),e("br"),t._v("\nDate Time Input\n"),e("no-ssr",[e("vue-live",{attrs:{layoutProps:{lang:"vue"},code:'<template>\n  <div>\n    <base-date-input\n      id="datetimeformatdemo"\n      :label="\'Enter A Date\'"\n      :format="\'day\'"\n      :show-label="true"\n      v-model="datepicked"\n      type="datetime"\n      placeholder="enter a date"\n    />\n    <div>{{ datepicked }}</div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      datepicked: {\n        date: "",\n        time: "",\n      },\n    };\n  },\n};\n<\/script>\n',requires:{}}})],1)],1)}),[],!1,null,null,null);e.default=_.exports}}]);