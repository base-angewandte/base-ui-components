(window.webpackJsonp=window.webpackJsonp||[]).push([[183],{1485:function(e,t,s){"use strict";s.r(t);var n=s(34),r=Object(n.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"baseselectoptions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#baseselectoptions"}},[e._v("#")]),e._v(" BaseSelectOptions")]),e._v(" "),t("blockquote",[t("p",[e._v("component to enable display of selected items and a select all")])]),e._v(" "),t("h2",{attrs:{id:"props"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#props"}},[e._v("#")]),e._v(" Props")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Prop name")]),e._v(" "),t("th",[e._v("Description")]),e._v(" "),t("th",[e._v("Type")]),e._v(" "),t("th",[e._v("Values")]),e._v(" "),t("th",[e._v("Default")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("selectedNumberText")]),e._v(" "),t("td",[e._v("specify the text displayed for number of selected entries:"),t("br"),t("code",[e._v("x {selectedNumberText}")])]),e._v(" "),t("td",[e._v("string")]),e._v(" "),t("td",[e._v("-")]),e._v(" "),t("td",[e._v("'entries selected'")])]),e._v(" "),t("tr",[t("td",[e._v("selectText")]),e._v(" "),t("td",[e._v("the text displayed for select / deselect all")]),e._v(" "),t("td",[e._v("string")]),e._v(" "),t("td",[e._v("-")]),e._v(" "),t("td",[e._v("'All'")])]),e._v(" "),t("tr",[t("td",[e._v("deselectText")]),e._v(" "),t("td",[e._v("the text displayed for select / deselect all")]),e._v(" "),t("td",[e._v("string")]),e._v(" "),t("td",[e._v("-")]),e._v(" "),t("td",[e._v("'None'")])]),e._v(" "),t("tr",[t("td",[e._v("list")]),e._v(" "),t("td",[e._v("provide a list of currently visible entries")]),e._v(" "),t("td",[e._v("array")]),e._v(" "),t("td",[e._v("-")]),e._v(" "),t("td",[e._v("[]")])]),e._v(" "),t("tr",[t("td",[e._v("selectedList")]),e._v(" "),t("td",[e._v("provide a list of selected entries")]),e._v(" "),t("td",[e._v("array")]),e._v(" "),t("td",[e._v("-")]),e._v(" "),t("td",[e._v("[]")])]),e._v(" "),t("tr",[t("td",[e._v("selectAllDisabled")]),e._v(" "),t("td",[e._v("disable the button by setting this prop to true")]),e._v(" "),t("td",[e._v("boolean")]),e._v(" "),t("td",[e._v("-")]),e._v(" "),t("td",[e._v("false")])]),e._v(" "),t("tr",[t("td",[e._v("reverse")]),e._v(" "),t("td",[e._v('By default, the "All/None" button appears on the right, and the counter of'),t("br"),e._v("selected items appears on the left. Set this to "),t("code",[e._v("true")]),e._v(" to reverse the order.")]),e._v(" "),t("td",[e._v("boolean")]),e._v(" "),t("td",[e._v("-")]),e._v(" "),t("td",[e._v("false")])])])]),e._v(" "),t("h2",{attrs:{id:"events"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#events"}},[e._v("#")]),e._v(" Events")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Event name")]),e._v(" "),t("th",[e._v("Properties")]),e._v(" "),t("th",[e._v("Description")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("selected")]),e._v(" "),t("td",[t("strong",[e._v("undefined")]),e._v(" "),t("code",[e._v("boolean")]),e._v(" - were all entries selected")]),e._v(" "),t("td",[e._v("emitted on select all button click")])])])]),e._v(" "),t("h2",{attrs:{id:"slots"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#slots"}},[e._v("#")]),e._v(" Slots")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Name")]),e._v(" "),t("th",[e._v("Description")]),e._v(" "),t("th",[e._v("Bindings")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("selectedText")]),e._v(" "),t("td",[e._v("here number of selected entries is indicated - replace with this slot for customization.")]),e._v(" "),t("td")])])]),e._v(" "),t("hr"),e._v(" "),t("h2",{attrs:{id:"demo"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#demo"}},[e._v("#")]),e._v(" Demo")]),e._v(" "),t("p",[e._v("Example with a BaseMenuList with BaseSelectOptions above.")]),e._v(" "),t("no-ssr",[t("vue-live",{attrs:{layoutProps:{lang:"vue"},code:'<template>\n  <div class="container">\n    <BaseSelectOptions\n      :list="list"\n      :selected-list="selectedArray"\n      select-text="All"\n      selected-number-text="entries selected"\n      @selected="selectAll"\n    />\n    <BaseMenuList\n      :list="list"\n      :selected-list="selectedArray"\n      :select-active="true"\n      @selected="selectEntry"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      list: [\n        {\n          id: "1",\n          title: "Active Entry",\n          type: "Bild",\n          error: false,\n          shared: true,\n        },\n        {\n          id: "2",\n          title: "Title",\n          type: "Type",\n          error: false,\n          shared: false,\n        },\n        {\n          id: "3",\n          title: \'Entry with "shared" and "error" true\',\n          type: "Konzert",\n          error: true,\n          shared: true,\n        },\n      ],\n      selectedArray: [],\n    };\n  },\n  computed: {\n    numberSelected() {\n      return this.selectedArray.length;\n    },\n    allSelected() {\n      return this.numberSelected === this.list.length;\n    },\n  },\n  methods: {\n    selectAll(selected) {\n      this.selectedArray = selected\n        ? [].concat(this.list.map((entry) => entry.id))\n        : [];\n    },\n    selectEntry({ selected, index }) {\n      const entry = this.list[index];\n      if (selected) {\n        this.selectedArray.push(entry.id);\n      } else {\n        this.selectedArray = this.selectedArray.filter(\n          (sel) => sel !== entry.id\n        );\n      }\n    },\n  },\n};\n<\/script>\n\n<style lang="scss">\n.container {\n  background-color: rgb(240, 240, 240);\n  padding: 16px;\n}\n</style>\n',requires:{}}})],1)],1)}),[],!1,null,null,null);t.default=r.exports}}]);