(window.webpackJsonp=window.webpackJsonp||[]).push([[121],{1350:function(t,e,v){"use strict";v.r(e);var _=v(35),d=Object(_.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"basechipsbelow"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#basechipsbelow"}},[t._v("#")]),t._v(" BaseChipsBelow")]),t._v(" "),e("blockquote",[e("p",[t._v("A very specialized component based on "),e("a",{attrs:{href:"BaseChipsInput"}},[t._v("BaseChipsInput")]),t._v("\nin order to assign additional values (e.g. roles) to selected entries)]")])]),t._v(" "),e("h2",{attrs:{id:"props"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#props"}},[t._v("#")]),t._v(" Props")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Prop name")]),t._v(" "),e("th",[t._v("Description")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Values")]),t._v(" "),e("th",[t._v("Default")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("list")]),t._v(" "),e("td",[t._v("list of selectable options objects with at least an identifier and a label property."),e("br"),t._v("property names can be set with props "),e("code",[t._v("identifierPropertyName")]),t._v(" and "),e("code",[t._v("labelPropertyName")])]),t._v(" "),e("td",[t._v("array")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("[]")])]),t._v(" "),e("tr",[e("td",[t._v("v-model")]),t._v(" "),e("td",[t._v("list of already selected options objects with at least an identifier and a label property"),e("br"),t._v("and a property to use for the secondary drop down ('additional property'), displayed as"),e("br"),t._v("chips."),e("br"),t._v("property names can be set with props "),e("code",[t._v("identifierPropertyName")]),t._v(", "),e("code",[t._v("labelPropertyName")]),t._v(" and"),e("br"),e("code",[t._v("additionalPropertyName")])]),t._v(" "),e("td",[t._v("array")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("[]")])]),t._v(" "),e("tr",[e("td",[t._v("id")]),t._v(" "),e("td",[t._v("if field is occurring more then once - set an id")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("''")])]),t._v(" "),e("tr",[e("td",[t._v("label")]),t._v(" "),e("td",[t._v("input field label")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("showLabel")]),t._v(" "),e("td",[t._v("define if label should be visible")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("true")])]),t._v(" "),e("tr",[e("td",[t._v("placeholder")]),t._v(" "),e("td",[t._v("input field placeholder")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("null")])]),t._v(" "),e("tr",[e("td",[t._v("dropDownNoOptionsInfo")]),t._v(" "),e("td",[t._v("message displayed when no selectable options are available")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("'No options available'")])]),t._v(" "),e("tr",[e("td",[t._v("allowUnknownEntries")]),t._v(" "),e("td",[t._v("define if the user can add an option that is not in the list")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("false")])]),t._v(" "),e("tr",[e("td",[t._v("allowMultipleEntries")]),t._v(" "),e("td",[t._v("define only a single or multiple options can be selected")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("true")])]),t._v(" "),e("tr",[e("td",[t._v("allowDynamicDropDownEntries")]),t._v(" "),e("td",[t._v("define if selectable list options should be fetched every time of if the"),e("br"),t._v("list passed in the beginning is used")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("false")])]),t._v(" "),e("tr",[e("td",[t._v("addSelectedEntryDirectly")]),t._v(" "),e("td",[t._v("this prop was added because there was some action needed to be done before entry was added"),e("br"),t._v("so this is possible if entry is not added to selectedList directly but only in parent"),e("br"),t._v("component")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("true")])]),t._v(" "),e("tr",[e("td",[t._v("additionalPropOptions")]),t._v(" "),e("td",[t._v("Additional property options will set the drop down available for the selected entries"),e("br"),t._v("needs to be an object with at least a label and an identifier property, using names set in"),e("br"),t._v("identifierPropertyName and labelPropertyName")]),t._v(" "),e("td",[t._v("array")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("[]")])]),t._v(" "),e("tr",[e("td",[t._v("additionalPropPlaceholder")]),t._v(" "),e("td",[t._v("specify a placeholder of the additional property input field")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("'Select role(s)'")])]),t._v(" "),e("tr",[e("td",[t._v("hoverboxContent")]),t._v(" "),e("td",[t._v("set content for the info box activatable by click"),e("br"),t._v("see "),e("a",{attrs:{href:"BaseHoverBox"}},[t._v("BaseHoverBox")]),t._v(" for more details")]),t._v(" "),e("td",[t._v("object")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("{}")])]),t._v(" "),e("tr",[e("td",[t._v("isLoading")]),t._v(" "),e("td",[t._v("show spinner to indicate that something is loading"),e("br"),t._v("(for dynamically fetched entries that need to do backend requests)")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("false")])]),t._v(" "),e("tr",[e("td",[t._v("sortText")]),t._v(" "),e("td",[t._v("if sorting is enabled this will be the text shown in the button")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("'Sort A â€“ Z'")])]),t._v(" "),e("tr",[e("td",[t._v("sortName")]),t._v(" "),e("td",[t._v("if "),e("code",[t._v("true")]),t._v(" sorting will consider the last string in a label or if a comma is"),e("br"),t._v("present the string before the comma")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("false")])]),t._v(" "),e("tr",[e("td",[t._v("language")]),t._v(" "),e("td",[t._v("set a language (ISO 639-1)")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("''")])]),t._v(" "),e("tr",[e("td",[t._v("addNewChipText")]),t._v(" "),e("td",[t._v("set a chips text for adding a new chip"),e("br"),t._v("(alternatively add a 'form.Add' value to your localization files)."),e("br"),t._v("if "),e("code",[t._v("allowUnknownEntries")]),t._v(" is "),e("code",[t._v("true")]),t._v(" please add this in one form or another!")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("''")])]),t._v(" "),e("tr",[e("td",[t._v("identifierPropertyName")]),t._v(" "),e("td",[t._v("specify the object property that should be used as identifier")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("'id'")])]),t._v(" "),e("tr",[e("td",[t._v("labelPropertyName")]),t._v(" "),e("td",[t._v("specify the object property that should be used as value to be displayed")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("'label'")])]),t._v(" "),e("tr",[e("td",[t._v("additionalPropertyName")]),t._v(" "),e("td",[t._v("define the name of the property that is relevant for the additional drop down"),e("br"),t._v("once a value was selected from the primary drop down")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("'roles'")])]),t._v(" "),e("tr",[e("td",[t._v("required")]),t._v(" "),e("td",[t._v("mark as required field (currently only used for "),e("code",[t._v("aria-required")]),t._v(")")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("false")])]),t._v(" "),e("tr",[e("td",[t._v("invalid")]),t._v(" "),e("td",[t._v("mark the form field as invalid and ideally also provide an error message"),e("br"),t._v("to display below the form field."),e("br"),t._v("for an example see "),e("a",{attrs:{href:"BaseInput"}},[t._v("BaseInput")])]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("false")])]),t._v(" "),e("tr",[e("td",[t._v("disabled")]),t._v(" "),e("td",[t._v("set "),e("code",[t._v("true")]),t._v(" if input field should be disabled."),e("br"),t._v("for an example see "),e("a",{attrs:{href:"BaseInput"}},[t._v("BaseInput")])]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("false")])]),t._v(" "),e("tr",[e("td",[t._v("errorMessage")]),t._v(" "),e("td",[t._v("add an error message to be displayed below form field if field is invalid"),e("br"),t._v("for an example see "),e("a",{attrs:{href:"BaseInput"}},[t._v("BaseInput")])]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("''")])]),t._v(" "),e("tr",[e("td",[t._v("showErrorIcon")]),t._v(" "),e("td",[t._v("define if error icon should be shown."),e("br"),t._v("for an example see "),e("a",{attrs:{href:"BaseInput"}},[t._v("BaseInput")])]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("false")])]),t._v(" "),e("tr",[e("td",[t._v("clearable")]),t._v(" "),e("td",[t._v("if true a remove icon will be shown allowing to remove"),e("br"),t._v("all input at once."),e("br"),t._v("for an example see "),e("a",{attrs:{href:"BaseInput"}},[t._v("BaseInput")])]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("false")])]),t._v(" "),e("tr",[e("td",[t._v("inputClass")]),t._v(" "),e("td",[t._v("specify additional input field styling")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("''")])])])]),t._v(" "),e("h2",{attrs:{id:"events"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#events"}},[t._v("#")]),t._v(" Events")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Event name")]),t._v(" "),e("th",[t._v("Properties")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("selected-changed")]),t._v(" "),e("td",[e("strong",[t._v("undefined")]),t._v(" "),e("code",[t._v("Object")]),t._v(" - the altered list")]),t._v(" "),e("td",[t._v("propagate list change from dragging event to parent")])]),t._v(" "),e("tr",[e("td",[t._v("fetch-dropdown-entries")]),t._v(" "),e("td",[e("strong",[t._v("value")]),t._v(" "),e("code",[t._v("string")]),t._v(" - the input string"),e("br"),e("strong",[t._v("type")]),t._v(" "),e("code",[t._v("string")]),t._v(" - the "),e("code",[t._v("labelPropertyName")]),t._v(" that was specified")]),t._v(" "),e("td",[t._v("if drop down entries dynamically set - fetch new entries on input")])]),t._v(" "),e("tr",[e("td",[t._v("hoverbox-active")]),t._v(" "),e("td",[e("strong",[t._v("value")]),t._v(" "),e("code",[t._v("boolean")]),t._v(" - value describing if hoverbox active is "),e("code",[t._v("true")]),t._v(" or "),e("code",[t._v("false")]),e("br"),e("strong",[t._v("option")]),t._v(" "),e("code",[t._v("Object")]),t._v(" - the option for which the hoverbox was activated")]),t._v(" "),e("td",[t._v("event emitted on show / hide hoverbox")])])])]),t._v(" "),e("h2",{attrs:{id:"slots"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#slots"}},[t._v("#")]),t._v(" Slots")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Name")]),t._v(" "),e("th",[t._v("Description")]),t._v(" "),e("th",[t._v("Bindings")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("drop-down-entry")]),t._v(" "),e("td",[t._v("a slot to provide customized drop down options")]),t._v(" "),e("td",[e("strong",[t._v("item")]),t._v(" "),e("code",[t._v("Object")]),t._v(" - an option in the options list")])]),t._v(" "),e("tr",[e("td",[t._v("label-addition")]),t._v(" "),e("td",[t._v("Slot to allow for additional elements on the right side of the label row <div> (e.g. language tabs)). for an example see "),e("a",{attrs:{href:"BaseChipsInputField"}},[t._v("BaseChipsInputField")])]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("input-field-addition-before")]),t._v(" "),e("td",[t._v("Slot to allow for additional elements in the input field <div> (before <input>). for an example see "),e("a",{attrs:{href:"BaseChipsInputField"}},[t._v("BaseChipsInputField")])]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("input-field-addition-after")]),t._v(" "),e("td",[t._v("for adding elements after input")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("post-input-field")]),t._v(" "),e("td",[t._v("for adding elements at the end covering the whole height. for an example see "),e("a",{attrs:{href:"BaseChipsInputField"}},[t._v("BaseChipsInputField")])]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("error-icon")]),t._v(" "),e("td",[t._v("use a custom icon instead of standard error/warning icon. for an example see "),e("a",{attrs:{href:"BaseChipsInputField"}},[t._v("BaseChipsInputField")])]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("remove-icon")]),t._v(" "),e("td",[t._v("use a custom icon instead of standard remove icon. for an example see "),e("a",{attrs:{href:"BaseChipsInputField"}},[t._v("BaseChipsInputField")])]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("no-options")]),t._v(" "),e("td",[t._v("a slot to customize messages in case of no options present in drop down")]),t._v(" "),e("td")])])]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"demo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#demo"}},[t._v("#")]),t._v(" Demo")]),t._v(" "),e("p",[t._v("A simple chips input form field with chips displayed below\nand default (base project specific) role selection")]),t._v(" "),e("no-ssr",[e("vue-live",{attrs:{layoutProps:{lang:"vue"},code:"<template>\n  <div class=\"container\">\n    <BaseChipsBelow\n      v-model=\"selectedList\"\n      :chips-editable=\"true\"\n      :list=\"[\n        {\n          id: 'Herbert Marcuse',\n          label: 'Herbert Marcuse'\n        },\n        {\n          id: 'Erich From',\n          label: 'Erich From'\n        },\n        {\n          id: 'Georg Weerth',\n          label: 'Georg Weerth'\n        }\n      ]\"\n      :additional-prop-options=\"[\n        {\n          label: 'Actor'\n        },\n        {\n          label: 'Magician'\n        },\n        {\n          label: 'Priest'\n        },\n        {\n          label: 'Farmer'\n        }\n      ]\"\n      label=\"Select a Person\"\n    >\n      <template #drop-down-entry=\"{ item }\">\n        {{ item.label }}\n      </template>\n    </BaseChipsBelow>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      selectedList: []\n    };\n  }\n};\n<\/script>\n\n<style></style>\n",requires:{}}})],1)],1)}),[],!1,null,null,null);e.default=d.exports}}]);