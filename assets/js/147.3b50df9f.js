(window.webpackJsonp=window.webpackJsonp||[]).push([[147],{1373:function(e,t,n){"use strict";n.r(t);var s=n(35),r=Object(s.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"basemenulist"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#basemenulist"}},[e._v("#")]),e._v(" BaseMenuList")]),e._v(" "),t("blockquote",[t("p",[e._v("Base Component for SideBar Menu Entries\n(this component is currently not ssr-capable)")])]),e._v(" "),t("h2",{attrs:{id:"props"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#props"}},[e._v("#")]),e._v(" Props")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Prop name")]),e._v(" "),t("th",[e._v("Description")]),e._v(" "),t("th",[e._v("Type")]),e._v(" "),t("th",[e._v("Values")]),e._v(" "),t("th",[e._v("Default")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("selectActive")]),e._v(" "),t("td",[e._v("define if entries are selectable -> d.h. the selectboxes are showing")]),e._v(" "),t("td",[e._v("boolean")]),e._v(" "),t("td",[e._v("-")]),e._v(" "),t("td",[e._v("false")])]),e._v(" "),t("tr",[t("td",[e._v("list")]),e._v(" "),t("td",[e._v("list of menu entries - array of objects"),t("br"),e._v(" Entry properties that can be displayed:"),t("br"),t("br"),e._v(" "),t("em",[e._v("required")]),e._v(":"),t("br"),e._v(" "),t("strong",[e._v("id")]),e._v(" "),t("code",[e._v("string")]),e._v(" - give every item an unique id"),t("br"),t("br"),e._v(" "),t("em",[e._v("optional")]),e._v(":"),t("br"),e._v(" "),t("strong",[e._v("title")]),e._v(" "),t("code",[e._v("string")]),e._v(" - main text line in the list item"),t("br"),e._v(" "),t("strong",[e._v("description")]),e._v(" "),t("code",[e._v("string")]),e._v(" - second text line in the list item"),t("br"),e._v(" "),t("strong",[e._v("active")]),e._v(" "),t("code",[e._v("boolean")]),e._v(" - steer from outside if item should be displayed active (with left"),t("br"),e._v(" side color border)"),t("br"),e._v(" "),t("strong",[e._v("selected")]),e._v(" "),t("code",[e._v("boolean")]),e._v(" - steer from outside if entry select box should be checked"),t("br"),e._v(" "),t("strong",[e._v("disabled")]),e._v(" "),t("code",[e._v("boolean")]),e._v(" - steer from outside if entry select box should be disabled"),t("br"),e._v(" "),t("strong",[e._v("icon")]),e._v(" "),t("code",[e._v("string")]),e._v(" - a valid "),t("a",{attrs:{href:"BaseIcon"}},[e._v("BaseIcon")]),e._v(" icon name"),t("br"),t("br"),e._v(" Also see "),t("a",{attrs:{href:"BaseMenuEntry"}},[e._v("BaseMenuEntry")]),e._v(" component for more information on"),t("br"),e._v(" the mentioned properties.")]),e._v(" "),t("td",[e._v("array")]),e._v(" "),t("td",[e._v("-")]),e._v(" "),t("td",[e._v("[]")])]),e._v(" "),t("tr",[t("td",[e._v("activeEntry")]),e._v(" "),t("td",[e._v("index of the entry that should currently be active"),t("br"),e._v("TODO: check if it would be better to use id here!")]),e._v(" "),t("td",[e._v("number")]),e._v(" "),t("td",[e._v("-")]),e._v(" "),t("td",[e._v("-1")])]),e._v(" "),t("tr",[t("td",[e._v("selectedList")]),e._v(" "),t("td",[e._v("provide a list of entries that should appear selected")]),e._v(" "),t("td",[e._v("array")]),e._v(" "),t("td",[e._v("-")]),e._v(" "),t("td",[e._v("[]")])]),e._v(" "),t("tr",[t("td",[e._v("dragName")]),e._v(" "),t("td",[e._v("specify the group name for the drag receiver")]),e._v(" "),t("td",[e._v("string")]),e._v(" "),t("td",[e._v("-")]),e._v(" "),t("td",[e._v("'menuEntry'")])])])]),e._v(" "),t("h2",{attrs:{id:"events"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#events"}},[e._v("#")]),e._v(" Events")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Event name")]),e._v(" "),t("th",[e._v("Properties")]),e._v(" "),t("th",[e._v("Description")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("clicked")]),e._v(" "),t("td",[t("strong",[e._v("undefined")]),e._v(" "),t("code",[e._v("String")]),e._v(" - the index of the respective entry")]),e._v(" "),t("td",[e._v("event emitted when a menu entry is clicked")])]),e._v(" "),t("tr",[t("td",[e._v("selected")]),e._v(" "),t("td",[t("strong",[e._v("index")]),e._v(" "),t("code",[e._v("string")]),e._v(" - the index of the selected item"),t("br"),t("strong",[e._v("selected")]),e._v(" "),t("code",[e._v("boolean")]),e._v(" - was items selected")]),e._v(" "),t("td",[e._v("event emitted when entry is clicked and select is active")])])])]),e._v(" "),t("h2",{attrs:{id:"slots"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#slots"}},[e._v("#")]),e._v(" Slots")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Name")]),e._v(" "),t("th",[e._v("Description")]),e._v(" "),t("th",[e._v("Bindings")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("thumbnails")]),e._v(" "),t("td",[e._v("Use this scoped slot to supply a list of thumbnails (i.e. "),t("a",{attrs:{href:"BaseIcon"}},[e._v("BaseIcon")]),e._v(") for "),t("code",[e._v("item")]),e._v(", where "),t("code",[e._v("item")]),e._v(" is one list element. See also the example below.")]),e._v(" "),t("td")])])]),e._v(" "),t("hr"),e._v(" "),t("h2",{attrs:{id:"demo"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#demo"}},[e._v("#")]),e._v(" Demo")]),e._v(" "),t("p",[e._v("Example of "),t("code",[e._v("BaseMenuEntry")]),e._v(" with various entry thumbnails supplied via "),t("code",[e._v("thumbnails")]),e._v(" slot.")]),e._v(" "),t("no-ssr",[t("vue-live",{attrs:{layoutProps:{lang:"vue"},code:'<template>\n  <div class="listcontainer">\n    <BaseMenuList\n      :list="list"\n      :selected-list="selectedArray"\n      :select-active="selectActive"\n      :active-entry="activeEntry"\n      @selected="\n        $event.selected\n          ? selectedArray.push(list[$event.index].id)\n          : selectedArray.splice(selectedArray.indexOf($event.index), 1)\n      "\n      @clicked="activeEntry = $event"\n    >\n      <template #thumbnails="{ item }">\n        <BaseIcon v-if="item.published" name="eye" class="icon" />\n        <BaseIcon v-if="item.shared" name="people" class="icon" />\n        <BaseIcon v-if="item.error" name="attention" class="icon" />\n      </template>\n    </BaseMenuList>\n    <BaseButton\n      text="Toggle Select"\n      button-style="row"\n      class="listbutton"\n      @clicked="selectActive = !selectActive"\n    />\n    <div class="show">{{ "Entry active Index: " + activeEntry }}</div>\n    <div class="show">{{ "Selected Entries: " + selectedArray }}</div>\n  </div>\n</template>\n<script>\nexport default {\n  data() {\n    return {\n      list: [\n        {\n          id: "1",\n          title: "Active Entry",\n          type: "Bild",\n          error: false,\n          shared: true,\n          active: true,\n          published: true\n        },\n        {\n          id: "2",\n          title: "Title",\n          description: "Description",\n          type: "Type",\n          error: false,\n          shared: false,\n          published: false\n        },\n        {\n          id: "3",\n          title:\n            \'Entry with "error", "shared", and "published" properties set to true\',\n          type: "Konzert",\n          error: true,\n          shared: true,\n          published: true\n        },\n        {\n          id: "4",\n          title: \'Entry with "published" property set to true\',\n          type: "Publikation",\n          error: false,\n          published: true\n        }\n      ],\n      selectActive: false,\n      activeEntry: 0,\n      selectedArray: []\n    };\n  }\n};\n<\/script>\n<style>\n.listcontainer {\n  background: rgb(240, 240, 240);\n  padding: 16px;\n}\n.listbutton {\n  margin-top: 16px;\n}\n.show {\n  margin-top: 16px;\n}\n.icon {\n  width: 12px;\n  height: 12px;\n}\n</style>\n',requires:{}}})],1)],1)}),[],!1,null,null,null);t.default=r.exports}}]);