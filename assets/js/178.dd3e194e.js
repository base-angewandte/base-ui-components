(window.webpackJsonp=window.webpackJsonp||[]).push([[178],{1482:function(t,e,v){"use strict";v.r(e);var _=v(34),n=Object(_.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"basepopup"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#basepopup"}},[t._v("#")]),t._v(" BasePopUp")]),t._v(" "),e("blockquote",[e("p",[t._v("A component as overlay to display messages")])]),t._v(" "),e("h2",{attrs:{id:"props"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#props"}},[t._v("#")]),t._v(" Props")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Prop name")]),t._v(" "),e("th",[t._v("Description")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Values")]),t._v(" "),e("th",[t._v("Default")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("title")]),t._v(" "),e("td",[t._v("pop up header text")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("'Pop Up'")])]),t._v(" "),e("tr",[e("td",[t._v("headerId")]),t._v(" "),e("td",[t._v("customize the popup header id."),e("br"),t._v(" if you are using the "),e("code",[t._v("header-title")]),t._v(" slot this should also be set as id on your custom title element")]),t._v(" "),e("td",[t._v("string|number")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("'popup-title'")])]),t._v(" "),e("tr",[e("td",[t._v("descriptionElementId")]),t._v(" "),e("td",[t._v("specify the id of the element containing a description - for accessibility only")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("''")])]),t._v(" "),e("tr",[e("td",[t._v("buttonLeftText")]),t._v(" "),e("td",[t._v("text shown in left button")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("'Cancel'")])]),t._v(" "),e("tr",[e("td",[t._v("buttonRightText")]),t._v(" "),e("td",[t._v("text shown in right button")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("'Submit'")])]),t._v(" "),e("tr",[e("td",[t._v("buttonLeftIcon")]),t._v(" "),e("td",[t._v("icon shown in left button")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("'remove'")])]),t._v(" "),e("tr",[e("td",[t._v("buttonRightIcon")]),t._v(" "),e("td",[t._v("icon shown in right button")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("'check-mark'")])]),t._v(" "),e("tr",[e("td",[t._v("buttonRightDisabled")]),t._v(" "),e("td",[t._v("disable right button")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("false")])]),t._v(" "),e("tr",[e("td",[t._v("closeButtonDisabled")]),t._v(" "),e("td",[t._v("disable close button")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("false")])]),t._v(" "),e("tr",[e("td",[t._v("isLoading")]),t._v(" "),e("td",[t._v("if true button loader will be shown")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("false")])]),t._v(" "),e("tr",[e("td",[t._v("initialFocusElement")]),t._v(" "),e("td",[t._v("HTMLElement to focus after opening the popup"),e("br"),e("strong",[t._v("Note:")]),t._v(" If empty, the header title will be focused by default."),e("br"),t._v(" If using the slot for a custom header, be sure to"),e("br"),t._v(" define an id attribute with the value "),e("code",[t._v("popup-title")]),e("br"),t._v(" The value should be a valid CSS selector."),e("br"),e("strong",[t._v("useful IDs:")]),e("br"),t._v("- left-button: "),e("code",[t._v("popup-left-button")]),e("br"),t._v("- right-button: "),e("code",[t._v("popup-right-button")])]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("''")])]),t._v(" "),e("tr",[e("td",[t._v("fullscreenOnMobile")]),t._v(" "),e("td",[t._v("specify to render component with max height and width")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("false")])]),t._v(" "),e("tr",[e("td",[t._v("focusableElements")]),t._v(" "),e("td",[t._v("list of focusable HTML elements using tab key navigation")]),t._v(" "),e("td",[t._v("array")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("['a[href]', 'button:enabled', 'input:enabled', '*[tabindex]:not([tabindex=\"-1\"])']")])]),t._v(" "),e("tr",[e("td",[t._v("disableTabKeyHandler")]),t._v(" "),e("td",[t._v("specify to disable the tab key handler within the component")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("false")])]),t._v(" "),e("tr",[e("td",[t._v("showButtonRow")]),t._v(" "),e("td",[t._v("button row visibility")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("true")])]),t._v(" "),e("tr",[e("td",[t._v("overlayBackgroundVisible")]),t._v(" "),e("td",[t._v("define if the overlay background should be visible"),e("br"),t._v("(semitransparent black)")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[t._v("false")])])])]),t._v(" "),e("h2",{attrs:{id:"events"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#events"}},[t._v("#")]),t._v(" Events")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Event name")]),t._v(" "),e("th",[t._v("Properties")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("close")]),t._v(" "),e("td"),t._v(" "),e("td",[t._v("Event triggered on right top corner close action")])]),t._v(" "),e("tr",[e("td",[t._v("button-right")]),t._v(" "),e("td"),t._v(" "),e("td",[t._v("Event triggered with right button")])]),t._v(" "),e("tr",[e("td",[t._v("button-left")]),t._v(" "),e("td"),t._v(" "),e("td",[t._v("Event triggered with left button")])])])]),t._v(" "),e("h2",{attrs:{id:"slots"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#slots"}},[t._v("#")]),t._v(" Slots")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Name")]),t._v(" "),e("th",[t._v("Description")]),t._v(" "),e("th",[t._v("Bindings")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("header-title")]),t._v(" "),e("td",[t._v("add a custom header title instead of the text defined with the prop "),e("code",[t._v("title")]),t._v(".")]),t._v(" "),e("td",[e("strong",[t._v("header-id")]),t._v(" "),e("code",[t._v("string, number")]),t._v(" - set this id on your custom element as it is used by the aria-labelledby attribute of the pop up container")])]),t._v(" "),e("tr",[e("td",[t._v("default")]),t._v(" "),e("td",[t._v("slot to fill the body of the box with custom content")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("button-row")]),t._v(" "),e("td",[t._v("custom button row")]),t._v(" "),e("td")])])]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"demo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#demo"}},[t._v("#")]),t._v(" Demo")]),t._v(" "),e("p",[t._v("A basic example")]),t._v(" "),e("no-ssr",[e("vue-live",{attrs:{layoutProps:{lang:"vue"},code:'<template>\n  <div class="container">\n    <BaseButton text="Click me" @clicked="showPopUp = true" />\n    <BasePopUp\n      v-if="showPopUp"\n      title="An Example Pop Up"\n      button-right-text="Custom Submit"\n      @close="showPopUp = false"\n      @button-left="showPopUp = false"\n      @button-right="action"\n    >\n      <div class="body">Specify Content here</div>\n    </BasePopUp>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      showPopUp: false,\n    };\n  },\n  methods: {\n    action() {\n      alert("Pop Up Action confirmed!");\n    },\n  },\n};\n<\/script>\n\n<style>\n.container {\n  position: relative;\n}\n\n.body {\n  height: 100px;\n  font-size: 24px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n</style>\n',requires:{}}})],1)],1)}),[],!1,null,null,null);e.default=n.exports}}]);